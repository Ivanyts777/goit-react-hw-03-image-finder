{"version":3,"sources":["Components/Button/Button.js","Components/ImageGallery/ImageGallery.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Loader/Loader.js","Components/Modal/Modal.js","Components/Searchbar/Searchbar.js","Components/PixabayApi/pixabayApi.js","App.js","index.js"],"names":["Button","fetchImages","className","onClick","ImageGallery","children","ImageGalleryItem","images","toggleModal","parseLargeImage","map","image","key","id","largeImageURL","src","webformatURL","alt","tags","LoaderSpinner","type","color","height","width","Modal","heandleKeyDown","e","code","props","window","addEventListener","this","largeImage","Component","Searchbar","state","inputValue","heandleChange","setState","target","value","heandleSubmit","preventDefault","onSubmit","autoFocus","autoComplete","onChange","searchQuery","page","axios","get","then","response","data","hits","App","loading","shwModal","error","text","scrolling","scrollTo","top","document","documentElement","scrollHeight","behavior","loader","PixabayApi","prevState","catch","finally","hendleSearchFormSubmit","query","url","prev","showModal","prevProps","Loader","length","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.e1bc2329.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ fetchImages }) => {\r\n  return (\r\n    <div className=\"btn\">\r\n      <button className=\"btn__load-more\" onClick={fetchImages}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  fetchImages: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGallery = ({ children }) => {\r\n  return <ul className=\"ImageGallery\">{children}</ul>;\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ images, toggleModal, parseLargeImage }) => {\r\n  return (\r\n    <>\r\n      {images.map((image) => (\r\n        <li\r\n          className=\"ImageGalleryItem\"\r\n          key={image.id}\r\n          onClick={() => parseLargeImage(image.largeImageURL)}\r\n        >\r\n          <img\r\n            className=\"ImageGalleryItem-image\"\r\n            onClick={toggleModal}\r\n            src={image.webformatURL}\r\n            alt={image.tags}\r\n          />\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  parseLargeImage: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst LoaderSpinner = () => {\r\n  return (\r\n    <div>\r\n      <Loader type=\"Rings\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderSpinner;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.heandleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"keydown\", this.heandleKeyDown);\r\n  }\r\n  heandleKeyDown = (e) => {\r\n    e.code === \"Escape\" && this.props.toggleModal();\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.props.toggleModal}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImage} alt=\"modalImage\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  heandleChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  heandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \" \" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.heandleSubmit}>\r\n          <button className=\"SearchForm-button\" type=\"submit\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoFocus\r\n            autoComplete=\"off\"\r\n            onChange={this.heandleChange}\r\n            value={this.state.inputValue}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import axios from \"axios\";\r\n\r\nconst fetchImagesWithQuery = (searchQuery, page = 1) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&${page}&key=17646054-1a7be31ba7655627546e0833b&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nexport default { fetchImagesWithQuery };\r\n","import React, { Component } from \"react\";\nimport Button from \"./Components/Button/Button\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\nimport ImageGalleryItem from \"./Components/ImageGalleryItem/ImageGalleryItem\";\nimport LoaderSpinner from \"./Components/Loader/Loader\";\nimport Modal from \"./Components/Modal/Modal\";\nimport Searchbar from \"./Components/Searchbar/Searchbar\";\nimport PixabayApi from \"./Components/PixabayApi/pixabayApi\";\n\n// import \"./App.css\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    loading: false,\n    shwModal: false,\n    searchQuery: \"\",\n    error: null,\n    page: 1,\n    text: \"\",\n    largeImage: null,\n  };\n\n  scrolling = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n    if (this.state.page > 2) {\n      this.scrolling();\n    }\n  }\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n    this.setState({ loader: true });\n    PixabayApi.fetchImagesWithQuery(searchQuery, page)\n      .then((images) =>\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        }))\n      )\n      .catch((error) => this.setState(error, \"Some error\"))\n      .finally(() => this.setState({ loader: false }));\n  };\n\n  hendleSearchFormSubmit = (query) => {\n    this.setState({ searchQuery: query, page: 1, images: [] });\n  };\n\n  parseLargeImage = (url) => {\n    this.setState((prev) => {\n      return {\n        largeImage: url,\n      };\n    });\n  };\n\n  toggleModal = (e) => {\n    this.setState((state) => ({\n      showModal: !state.showModal,\n    }));\n  };\n\n  render() {\n    const { showModal, images, loader, largeImage } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.hendleSearchFormSubmit} />\n\n        {loader ? (\n          <LoaderSpinner />\n        ) : (\n          <ImageGallery>\n            <ImageGalleryItem\n              parseLargeImage={this.parseLargeImage}\n              images={images}\n              toggleModal={this.toggleModal}\n            />\n          </ImageGallery>\n        )}\n\n        {images.length > 0 && !loader && (\n          <Button fetchImages={this.fetchImages} />\n        )}\n\n        {showModal && (\n          <Modal largeImage={largeImage} toggleModal={this.toggleModal} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}